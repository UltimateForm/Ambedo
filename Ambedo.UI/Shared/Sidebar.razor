@using Blazorise
@using Ambedo.Contract.Dtos;
@using Blazorise.States; 

<BarBrand>
	<BarItem>
		<BarToggler  />
	</BarItem>
</BarBrand>
<Divider />
<BarMenu>
	<BarStart Padding="Padding.Is2.OnAll" Style="height:100%">
		<BarItem>
			<TextEdit Placeholder="Thootle text" @bind-Text="@thootleText" />

		</BarItem>
		@*<div class="textBoxContainer">
		</div>*@
		<BarItem Style="height:calc(100% - 60px)"> @*TODO: move this up there on BarStart*@
			<Select TValue="int" Multiple="true" Style="height:100%">
				@foreach (var category in inputCategories)
				{
					<SelectItem Style="color:white" Value="@category.Id">@category.Value</SelectItem>
				}
			</Select>
		</BarItem>
	</BarStart>
	<BarEnd Padding="Padding.Is2.OnAll">
		<BarItem>
			<div class="horizontalButtonContainer">
				<Button Block="true" Color="Color.Primary">Create</Button>
				<Button Block="true" Color="Color.Secondary">Filter</Button>
			</div>
		</BarItem>

	</BarEnd>
</BarMenu>

 
@code {
	bool BarVisible { get; set; }
	record ThootleCategoryInput
	{
		public int Id { get; init; }
		public string Value { get; init; }
	}
	string thootleText { get; set; }
	IEnumerable<ThootleCategoryInput> inputCategories = Enum.GetNames(typeof(ThootleCategories)).Select((name, index) => new ThootleCategoryInput { Id = index, Value = name});
	int[] selectedCategories {get; set;}
	private BarState parentBarState;
	[CascadingParameter]
	protected BarState ParentBarState
	{
		get => parentBarState;
		set //not sure if this is the best way to manage this
		{
			Console.WriteLine("state? " + value); // we're going to do stuff here soon
			parentBarState = value;
		}
	}
}
